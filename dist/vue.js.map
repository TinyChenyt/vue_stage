{"version":3,"file":"vue.js","sources":["../src/compiler/index.js","../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`)\r\nconst startTagClose = /^\\s*(\\/?)>/\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`)\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\r\n// const regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g\r\n\r\n// 对模板进行编译\r\nfunction parseHTML(html) { // html最开始一定是<\r\n    // 最终需要转化成一颗抽象语法树\r\n    function start(tag,attrs) {\r\n        console.log(tag,attrs,\"开始\");\r\n    }\r\n    function chars(text) {\r\n        console.log(text,'文本');\r\n    }\r\n    function end(tag) {\r\n        console.log(tag,'结束');\r\n    }\r\n    function advance(n) {\r\n        html = html.substring(n)\r\n    }\r\n    function parseStartTag() {\r\n        const start = html.match(startTagOpen);\r\n        if(start) {\r\n            const match = {\r\n                tagName:start[1],\r\n                attrs:[]\r\n            }\r\n            advance(start[0].length);\r\n            // console.log(match,html);\r\n            let attr,end;\r\n            while(!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\r\n                advance(attr[0].length)\r\n                match.attrs.push({name:attr[1],value:attr[3] || attr[4] || attr[5] || true})\r\n            }\r\n            // 存在>时，要把>删掉\r\n            if(end) {\r\n                advance(end[0].length)\r\n            }\r\n            return match\r\n        }\r\n        // 如果不是开始标签的结束就一直匹配\r\n\r\n        return false\r\n    }\r\n    while(html) {\r\n        // 如果textEnd为0，说明是一个开始标签\r\n        // 如果textEnd>0,说明是文本的介绍位置\r\n        let textEnd = html.indexOf('<');\r\n        if(textEnd === 0) {\r\n            const startTagMatch = parseStartTag()\r\n            if(startTagMatch) { // 解析到开始标签\r\n                start(startTagMatch.tagName,startTagMatch.attrs)\r\n                continue\r\n            }\r\n            let endTagMatch = html.match(endTag)\r\n            if(endTagMatch) {\r\n                advance(endTagMatch[0].length)\r\n                end(endTagMatch[1])\r\n                continue;\r\n            }\r\n        }\r\n        // 截取文本的内容\r\n        if(textEnd > 0) {\r\n            let text = html.substring(0,textEnd)\r\n            if(text) {\r\n                chars(text)\r\n                advance(text.length)\r\n            }\r\n        }\r\n    }\r\n    console.log(html);\r\n}\r\nexport function compileToFunction(template) {\r\n    // 1、将template转为ast语法书\r\n    // debugger\r\n    let ast = parseHTML(template)\r\n    // 2、生产render方法（render方法返回的就是虚拟DOM）\r\n    \r\n}","// 重写数组中的部分方法\r\n\r\nlet oldArrayProto = Array.prototype\r\n\r\n// newArrayProto.__proto__ = oldArrayProto\r\nexport let newArrayProto = Object.create(oldArrayProto)\r\n\r\nlet methods  = [\r\n    // 找到所有变异方法\r\n    'push',\r\n    'pop',\r\n    'shift',\r\n    'unshift',\r\n    'reverse',\r\n    'sort',\r\n    'splice'\r\n]\r\n\r\nmethods.forEach(method => {\r\n    newArrayProto[method] = function(...args) { // 重写数组方法\r\n        const result = oldArrayProto[method].call(this,...args) // 内部调用原来的方法 函数的劫持 切片编程 \r\n\r\n        // 需要对新增的数据进行劫持\r\n        let inserted;\r\n        let ob = this.__ob__\r\n        switch (method) {\r\n            case 'push':\r\n            case 'unshift':\r\n                inserted = args\r\n                break;\r\n            case 'splice':\r\n                inserted = args.slice(2)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        // 对新增的属性进行观测\r\n        if(inserted) {\r\n            ob.observeArray(inserted)\r\n        }\r\n        return result\r\n    }\r\n})\r\n","import { newArrayProto } from \"./array\"\r\n\r\nclass ObServer{\r\n    constructor(data) {\r\n        // 给劫持的数据加一个标识，同时也是为了让重写的数组方法能调用observeArray方法\r\n        Object.defineProperty(data,'__ob__',{\r\n            value:this,\r\n            enumerable:false // 将__ob__变成不可枚举\r\n        })\r\n        // 需要判断是不是数组\r\n        if(Array.isArray(data)) {\r\n            // 重写数组中的7个变异方法\r\n            // 观测数组里的每一个值，然后进行劫持\r\n            data.__proto__ = newArrayProto\r\n            this.observeArray(data)\r\n        }else {\r\n            this.walk(data)\r\n        }\r\n    }\r\n    walk(data) {\r\n        // debugger\r\n        // let textData = data\r\n        // 循环对象，对属性进行劫持 重新定义属性\r\n        Object.keys(data).forEach(key=> defineReactive(data,key,data[key]))\r\n    }\r\n    observeArray(data) {\r\n        data.forEach(item => observe(item))\r\n    }\r\n}\r\nexport function defineReactive(target,key,value) { // 属性劫持\r\n    observe(value)\r\n    Object.defineProperty(target,key, {\r\n        get() {\r\n            console.log('key',key)\r\n            return value\r\n        },\r\n        set(newValue) {\r\n            if(newValue === value) return\r\n            observe(newValue)\r\n            value = newValue\r\n        }\r\n    })\r\n}\r\nexport function observe(data) {\r\n    // 对对象进行劫持，先判断data的类型\r\n    if(typeof data !== 'object' || data === null) {\r\n        return\r\n    }\r\n\r\n    // 判断是否被劫持过\r\n    if(data.__ob__ instanceof ObServer) {\r\n        return data.__ob__\r\n    }\r\n    return new ObServer(data); \r\n}","import { observe } from \"./observe/index\"\r\n\r\nexport function initState(vm) {\r\n    const opts = vm.$options\r\n    if(opts.data) {\r\n        initData(vm)\r\n    }\r\n}\r\n\r\nfunction proxy(vm,target,key) {\r\n    Object.defineProperty(vm,key,{\r\n        get() {\r\n            return vm[target][key]\r\n        },\r\n        set(newValue) {\r\n            vm[target][key] = newValue\r\n        }\r\n    })\r\n}\r\n\r\nfunction initData(vm) {\r\n    let data = vm.$options.data\r\n\r\n    data = typeof data === 'function' ? data.call(vm) : data\r\n    vm._data = data\r\n    // 对数据进行劫持\r\n    observe(data)\r\n\r\n    // 将vm._data用vm来代理\r\n    for(let key in data) {\r\n        proxy(vm,'_data',key)\r\n    }\r\n}","import { compileToFunction } from \"./compiler\"\r\nimport { initState } from \"./state\"\r\n\r\nexport function initMixin(Vue) {\r\n    Vue.prototype._init = function(options) { // 初始化\r\n        // vm.$options 获取用户的options\r\n        const vm = this\r\n        vm.$options = options \r\n\r\n        // 初始化状态\r\n        initState(vm)\r\n\r\n        if(options.el) {\r\n            vm.$mount(options.el)\r\n        }\r\n    }\r\n\r\n    Vue.prototype.$mount = function(el) {\r\n        const vm = this;\r\n        el = document.querySelector(el);\r\n        let ops = vm.$options\r\n        if(!ops.render) { // 先判断是否有render函数\r\n            let template; // 没有render判断是否有template，没有template就采用外部的template\r\n            if(!ops.template && el) {\r\n                template = el.outerHTML\r\n            }else {\r\n                if(el) {\r\n                    template = ops.template // 如果有el则采用模板内容\r\n                }\r\n            }\r\n            console.log(template);\r\n            // 写了template就采用写的template\r\n            if(template) {\r\n                // 对模板进行编译\r\n                const render = compileToFunction(template)\r\n                ops.render = render\r\n            }\r\n        }\r\n\r\n        ops.render;\r\n    }\r\n}\r\n\r\n","import { initMixin } from \"./init\"\r\n\r\nfunction Vue(options) { //options是用户的选项\r\n    this._init(options)\r\n}\r\n\r\ninitMixin(Vue)\r\n\r\nexport default Vue"],"names":["ncname","qnameCapture","concat","startTagOpen","RegExp","startTagClose","endTag","attribute","parseHTML","html","start","tag","attrs","console","log","chars","text","end","advance","n","substring","parseStartTag","match","tagName","length","attr","push","name","value","textEnd","indexOf","startTagMatch","endTagMatch","compileToFunction","template","oldArrayProto","Array","prototype","newArrayProto","Object","create","methods","forEach","method","_oldArrayProto$method","_len","arguments","args","_key","result","call","apply","inserted","ob","__ob__","slice","observeArray","ObServer","data","_classCallCheck","defineProperty","enumerable","isArray","__proto__","walk","_createClass","key","keys","defineReactive","item","observe","target","get","set","newValue","_typeof","initState","vm","opts","$options","initData","proxy","_data","initMixin","Vue","_init","options","el","$mount","document","querySelector","ops","render","outerHTML"],"mappings":"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"}